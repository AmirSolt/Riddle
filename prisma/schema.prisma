// npx prisma migrate dev --name init 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Config {
  id ConfigType @id

  easy_game_given_count Int @default(5)
  medium_game_given_count Int @default(3)
  hard_game_given_count Int @default(1)

  easy_points_to_win Int @default(1)
  medium_points_to_win Int @default(2)
  hard_points_to_win Int @default(4)

  easy_credit_cost Int @default(1)
  medium_credit_cost Int @default(2)
  hard_credit_cost Int @default(4)

  leaderboard_top_count           Int @default(20)
  disclaimer_repeat_message_count Int @default(150)
}

model Profile {
  id         String    @id @default(uuid())
  created_at DateTime  @default(now())
  twilio_id  String    @unique
  credit     Int       @default(3)
  points     Int       @default(0)
  messages   Message[]
  games      Game[]
  errors     MError[]

  @@index(fields: [twilio_id], type: Hash)
  @@index(fields: [points], type: BTree)
}

model Message {
  id          String     @id @default(uuid())
  created_at  DateTime   @default(now())
  content     String
  option_ids  String[]
  profile     Profile    @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  profile_id  String
  message_dir MessageDir
  extra_json  Json?
  image_urls  String[]

  @@index(fields: [created_at], type: BTree)
}

model Game {
  id         BigInt     @id @default(autoincrement())
  created_at  DateTime   @default(now())
  phrase     String
  difficulty Difficulty
  is_active Boolean @default(true)
  is_won  Boolean @default(false)
  points_to_win  Int
  credit_cost Int
  given      String[]
  guesses    String[]   @default([])
  profile    Profile    @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  profile_id String
}

model Phrase {
  id Int @id @default(autoincrement())
  content String
}

model MError {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  content    String
  profile    Profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  profile_id String
  extra_json Json?

  @@index(fields: [created_at], type: BTree)
}

enum MessageDir {
  INBOUND
  OUTBOUND
}

enum ConfigType {
  FREE
  TIER_ONE
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

